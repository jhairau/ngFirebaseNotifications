/**
 * Angular + Firebase Notifications Service for publishing & subscribing to topics
 * @version v0.0.1 - 2015-08-03
 * @link https://github.com/jhairau/ngFirebaseNotifications
 * @author Johnathan Hair <johnathan.hair.au@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */!function(a,b,c){b.module("ngFirebaseNotifications",["firebase"]).provider("ngFirebaseNotificationsConfig",function(){var a={firebaseUrl:null,firbaseQueueBase:"/"};return this.setConfig=function(c){b.extend(a,c)},this.getConfig=function(){return a},this.getConfigValue=function(b){return a[b]},this.$get=function(){return{get:this.getConfigValue}},this}),b.module("ngFirebaseNotifications").service("ngFirebaseNotifications",["ngFirebaseNotificationsConfig","$firebaseArray",function(a,c){var d=a.get("firebaseUrl"),e=a.get("firbaseQueueBase"),f=new Firebase(d).child(e),g=c.$extend({$subscriptions:[],$updatedData:{},subscribe:function(a,c){var d=this;this.$loaded().then(function(){var e={};e.subject=b.isFunction(a)?null:a,e.callback=b.isFunction(a)?a:c,d.$subscriptions.push(e)})},publish:function(a,b){this.$add({subject:a,message:btoa(JSON.stringify(b)),createdAt:Firebase.ServerValue.TIMESTAMP})},unsubscribe:function(){this.$destroy()},$$added:function(a){if(a.$id=a.key(),a.$priority=a.getPriority(),0!==this.$subscriptions.length){var c=b.extend({},this.updatedData);if(this.updatedData=a.val(),b.equals(this.updatedData,c))return a;var d=(a.ref(),a.key()),e=this.updatedData.subject,f=JSON.parse(atob(this.updatedData.message));b.forEach(this.$subscriptions,function(a){(null===a.subject||a.subject==e)&&a.callback.call(null,e,f,d)})}return a},$$updated:function(a){return a}});return{topic:function(a){return new g(f.child(a))}}}])}(window,window.angular);